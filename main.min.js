class rsAnimate{constructor(){let t="function"==typeof waveSplit&&new waveSplit(this),e={};this.twritereturn=function(){return classtwrite},this.waveSplitreturn=function(){return t},this.classwaveSplitObjFunc=function(t){if(!this.waveSplitreturn())throw Error("Add WaveSplit CDN");let i=Math.floor(1e3*Math.random());e={...e,[i]:new waveSplit(this)},this.waveSplitUpdate(t,i)},this.classwaveSplitObjReturn=function(){return e}}twriteUpdate(t){if("object"!=typeof t||Array.isArray(t))throw TypeError("The update value must be the object.");{let e=Object.keys(t).sort().filter(t=>this.twritereturn().updates().includes(t));for(let i=0;i<=e.length;i++)this.twritereturn()[e[i]]=t[e[i]]}}textAnimate(t){if("object"==typeof t&&!Array.isArray(t)){if(null===t.path||void 0===t.path||1!==t.path.nodeType)throw TypeError("Please Enter A Valid Path");this.classwaveSplitObjFunc(t)}}waveSplitUpdate(t,e){if("object"!=typeof t||Array.isArray(t))throw TypeError("The update value must be the object.");{let i=Object.keys(t).filter(t=>this.waveSplitreturn().validKeysReturn().includes(t));for(let r=0;r<i.length;r++)this.classwaveSplitObjReturn()[e].validEnteriesValueRangeReturn()[i[r]](t[i[r]])||(console.warn(`Please Enter A Valid Input For ${i[r]}`),delete t[i[r]]),r+1===i.length&&this.classwaveSplitObjReturn()[e].variableUpdate(t)}}}